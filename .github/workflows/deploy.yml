name: ðŸš€ Dev Branch Deployment (Fly.io)

on:
  push:
    branches:
      - dev
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  lint:
    name: ESLint
    runs-on: ubuntu-latest
    environment: nowrepgreen-e197-staging
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup node.js
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 20.x

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

  typecheck:
    name: TS Typecheck
    runs-on: ubuntu-latest
    environment: nowrepgreen-e197-staging
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup node.js
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 20.x

      - name: Install dependencies
        run: npm install

      - name: Type check
        run: npm run typecheck
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          TRIGGER_API_KEY: ${{ secrets.TRIGGER_API_KEY }}
          TRIGGER_SECRET_KEY: ${{ secrets.TRIGGER_SECRET_KEY }}
          SYNC_SECRET_KEY: ${{ secrets.SYNC_SECRET_KEY }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          # DOMAIN: ${{ secrets.DOMAIN }}

  unit-tests:
    name: Unit Tests (Vitest)
    runs-on: ubuntu-latest
    environment: nowrepgreen-e197-staging
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup node.js
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 20.x

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test -- --coverage
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          TRIGGER_API_KEY: ${{ secrets.TRIGGER_API_KEY }}
          TRIGGER_SECRET_KEY: ${{ secrets.TRIGGER_SECRET_KEY }}
          SYNC_SECRET_KEY: ${{ secrets.SYNC_SECRET_KEY }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          # DOMAIN: ${{ secrets.DOMAIN }}

  integration-tests:
    name: Integration Tests (Vitest)
    runs-on: ubuntu-latest
    environment: nowrepgreen-e197-staging
    if: false  # Disable this job from running
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup node.js
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 20.x

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test:i:ci
        env:
          CI: true
          DATABASE_URL: "file::memory:?cache=shared"
          TRIGGER_API_KEY: ${{ secrets.TRIGGER_API_KEY }}
          TRIGGER_SECRET_KEY: ${{ secrets.TRIGGER_SECRET_KEY }}
          SYNC_SECRET_KEY: ${{ secrets.SYNC_SECRET_KEY }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          TARGET_API_URL: ${{ secrets.TARGET_API_URL }}
          SOURCE_API_URL: ${{ secrets.SOURCE_API_URL }}
          # DOMAIN: ${{ secrets.DOMAIN }}

  deploy:
    name: Deploy to Fly.io
    runs-on: ubuntu-latest
    needs: [lint, typecheck, unit-tests]
    # only deploy branches on pushes for now
    if: ${{ github.ref == 'refs/heads/dev' && github.event_name == 'push'}}
    environment: ${{ github.ref == 'refs/heads/dev' && 'nowrepgreen-e197-staging'}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read app name
        uses: SebRollen/toml-action@v1.2.0
        id: app-name
        with:
          file: fly.toml
          field: app

      - name: Setup Fly
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Verify Fly CLI authentication
        run: flyctl auth whoami
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Disable Husky for deployment
        run: |
          # Create a backup of the original package.json
          cp package.json package.json.bak

          # Remove the prepare script from package.json
          jq 'del(.scripts.prepare)' package.json > package.json.tmp && mv package.json.tmp package.json

          echo "Modified package.json to remove Husky prepare script"

      - name: Install dependencies
        run: npm ci

      - name: Deploy Dev Branch
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: flyctl deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }} --app ${{ steps.app-name.outputs.value }}-staging
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          TRIGGER_API_KEY: ${{ secrets.TRIGGER_API_KEY }}
          TRIGGER_SECRET_KEY: ${{ secrets.TRIGGER_SECRET_KEY }}
          SYNC_SECRET_KEY: ${{ secrets.SYNC_SECRET_KEY }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          TARGET_API_URL: ${{ secrets.TARGET_API_URL }}
          SOURCE_API_URL: ${{ secrets.SOURCE_API_URL }}
          # DOMAIN: ${{ secrets.DOMAIN }}

      - name: Deploy Trigger.dev
        if: ${{ github.ref == 'refs/heads/dev' }}
        env:
          TRIGGER_ACCESS_TOKEN: ${{ secrets.TRIGGER_ACCESS_TOKEN }}
          SYNC_SECRET_KEY: ${{ secrets.SYNC_SECRET_KEY }}
          TARGET_API_URL: ${{ secrets.TARGET_API_URL }}
          SOURCE_API_URL: ${{ secrets.SOURCE_API_URL }}
        run: |
          npx run trigger:deploy
